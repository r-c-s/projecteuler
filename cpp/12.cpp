/*
#------------------------------------------------------------------------------
# PROJECT EULER
# PROBLEM 12
#------------------------------------------------------------------------------
# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first 
# ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred 
# divisors?
#------------------------------------------------------------------------------
# SOLUTION: 76576500
#------------------------------------------------------------------------------
*/

#include <iostream>
#include <cmath>
using namespace std;

int numberOfDivisors(long);

int main(){
    long triangles[20000];
    int numberOfDivs[20000];
    for (int i = 0; i < 20000; i++){
        triangles[i] = i * (i + 1) / 2;
        numberOfDivs[i] = numberOfDivisors(triangles[i]);
        if(numberOfDivs[i] > 500){
            cout << triangles[i] << "  " << numberOfDivs[i] << "  " << i << endl;
            break;
        }
    }
}

int numberOfDivisors(long i){
    int numberOfDivs = 0;
    for (int j = 1; j <= sqrt(i); j++){
        if (i % j == 0){
            numberOfDivs+=2;
        }
    }
    return numberOfDivs;
}
